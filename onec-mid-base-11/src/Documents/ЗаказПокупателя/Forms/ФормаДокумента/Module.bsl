
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	//
	// +++ ПавловаАИ доработка по задаче 
	ПолеНаФорме = Элементы.Добавить("КонтактныеЛица", Тип("ПолеФормы"), Элементы.ГруппаШапкаПраво);
	ПолеНаФорме.Вид = ВидПоляФормы.ПолеВвода;
	ПолеНаФорме.ПутьКДанным = "Объект.КонтактныеЛица";
	
	ПолеНаФормеСкидка = Элементы.Добавить("СогласованнаяСкидка", Тип("ПолеФормы"), Элементы.ГруппаШапкаЛево);
	ПолеНаФормеСкидка.Вид = ВидПоляФормы.ПолеВвода;
	ПолеНаФормеСкидка.ПутьКДанным = "Объект.СогласованнаяСкидка";
	ПолеНаФормеСкидка.УстановитьДействие("ПриИзменении", "СогласованнаяСкидкаПриИзменении");
	
	Команда = Команды.Добавить("ПересчётТаблицы");
	Команда.Заголовок = "Пересчёт таблицы";
	Команда.Действие = "Доработка_ПересчётТаблицы";
	
	КнопкаФормы = Элементы.Добавить("КнопкаПересчётТаблицы", Тип("КнопкаФормы"), Элементы.ГруппаШапкаЛево);
	КнопкаФормы.ИмяКоманды = "ПересчётТаблицы";
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка; 
	
	ЦветВажнойКнопки = WebЦвета.БледноЗеленый; // красный
	ЦветОбычнойКнопки = ЦветаСтиля.ЦветФонаКнопки;
	КнопкаФормы.ЦветФона = ЦветВажнойКнопки; 
	
	// --- ПавловаАИ конец доработки по задаче 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;	
	// +++ ПавловаАИ доработка по задаче  
	//Изменение расчета суммы согласно задаче  
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * (1 - объект.СогласованнаяСкидка/100); 
	
	// --- ПавловаАИ конец доработки по задаче 	
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура Доработка_ПересчётТаблицы(Команда)   
	// +++ ПавловаАИ доработка по задаче     
	НуженПересчет = Истина;
	ФормированиеТекущихДанных(НуженПересчет);
    // --- ПавловаАИ конец доработки по задаче 
КонецПроцедуры


&НаКлиенте
Асинх Процедура СогласованнаяСкидкаПриИзменении(Элемент)
	// +++ ПавловаАИ доработка по задаче 
	Если Объект.Товары.Количество() <> 0 Или Объект.Услуги.Количество() <> 0 Тогда
		
		НуженПересчет = Ждать КомандаВопросАсинх();  
		
	КонецЕсли; 
	
	ФормированиеТекущихДанных(НуженПересчет);
	// --- ПавловаАИ конец доработки по задаче
КонецПроцедуры   

&Наклиенте
Процедура ФормированиеТекущихДанных(НуженПересчет)
	// +++ ПавловаАИ доработка по задаче  
	Если Объект.Товары.Количество() <> 0 Тогда
		Если НуженПересчет = Истина Тогда 
			
			ТекущиеДанныеТовары = Элементы.Товары.ТекущиеДанные; 
			
			Для каждого ТекущиеДанныеТовары из Объект.Товары цикл
				РассчитатьСуммуСтроки(ТекущиеДанныеТовары);  
			КонецЦикла;  
			
		КонецЕсли;
	Конецесли;
	
	
	Если Объект.Услуги.Количество() <> 0 Тогда
		Если НуженПересчет = Истина Тогда 
			
			ТекущиеДанныеУслуги = Элементы.Услуги.ТекущиеДанные;  
			
			Для каждого ТекущиеДанныеУслуги из Объект.Услуги цикл
				РассчитатьСуммуСтроки(ТекущиеДанныеУслуги); 
			КонецЦикла;
			
		КонецЕсли;
	Конецесли; 
	// --- ПавловаАИ конец доработки по задаче 
КонецПроцедуры


&НаКлиенте
Асинх Функция КомандаВопросАсинх()
	// +++ ПавловаАИ доработка по задаче   
	Ответ = Ждать ВопросАсинх("Пересчитать табличную часть?", РежимДиалогаВопрос.ДаНет,); 
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Возврат Истина;  
	// --- ПавловаАИ конец доработки по задаче 	
КонецФункции



#КонецОбласти
